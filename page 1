<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>G√©n√©rateur de Factures - Installation R√©seau √âlectrique BT</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            backdrop-filter: blur(10px);
        }

        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .main-content {
            padding: 40px;
        }

        .controls {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #56ab2f, #a8e6cf);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .invoice-container {
            background: white;
            border-radius: 15px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .invoice-header {
            text-align: center;
            margin-bottom: 30px;
            border-bottom: 3px solid #3498db;
            padding-bottom: 20px;
        }

        .invoice-title {
            font-size: 2rem;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .invoice-subtitle {
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .table-container {
            overflow-x: auto;
            margin: 30px 0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        th {
            background: linear-gradient(135deg, #34495e, #2c3e50);
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #ecf0f1;
            transition: background-color 0.3s ease;
        }

        tr:hover td {
            background-color: #f8f9fa;
        }

        .quantity-input {
            width: 80px;
            padding: 8px;
            border: 2px solid #bdc3c7;
            border-radius: 5px;
            text-align: center;
            font-weight: bold;
            transition: border-color 0.3s ease;
        }

        .quantity-input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 10px rgba(52, 152, 219, 0.3);
        }

        .total-section {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 30px;
            border-radius: 15px;
            margin-top: 30px;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #dee2e6;
            font-size: 1.3rem;
            font-weight: bold;
        }

        .total-row:last-child {
            border-bottom: none;
            font-size: 1.5rem;
            color: #2c3e50;
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .contact-info {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-radius: 15px;
            font-size: 1.2rem;
            font-weight: bold;
        }

        .price {
            font-weight: bold;
            color: #27ae60;
        }

        .animation-fade {
            animation: fadeIn 0.5s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 768px) {
            .controls {
                flex-direction: column;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .main-content {
                padding: 20px;
            }
            
            table {
                font-size: 0.9rem;
            }
            
            th, td {
                padding: 10px 8px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>G√©n√©rateur de Factures</h1>
            <p>Installation d'un R√©seau √âlectrique BT</p>
        </div>

        <div class="main-content">
            <div class="controls">
                <button class="btn btn-primary" onclick="generateInvoice()">
                    üîÑ G√©n√©rer Nouvelle Facture
                </button>
                <button class="btn btn-success" onclick="printInvoice()">
                    üñ®Ô∏è Imprimer Facture
                </button>
                <button class="btn btn-danger" onclick="resetQuantities()">
                    ‚Ü∫ R√©initialiser
                </button>
            </div>

            <div class="invoice-container animation-fade" id="invoice">
                <div class="invoice-header">
                    <h2 class="invoice-title">DEVIS - INSTALLATION R√âSEAU √âLECTRIQUE BT</h2>
                    <p class="invoice-subtitle">D√©tail des travaux et mat√©riaux</p>
                    <p class="invoice-subtitle">Date: <span id="currentDate"></span></p>
                </div>

                <div class="table-container">
                    <table id="invoiceTable">
                        <thead>
                            <tr>
                                <th>D√âSIGNATION</th>
                                <th>QUANTIT√â</th>
                                <th>PRIX UNIT. (FCFA)</th>
                                <th>PRIX TOTAL (FCFA)</th>
                            </tr>
                        </thead>
                        <tbody id="tableBody">
                            <!-- Table content will be generated by JavaScript -->
                        </tbody>
                    </table>
                </div>

                <div class="total-section">
                    <div class="total-row">
                        <span>Sous-total Mat√©riaux:</span>
                        <span class="price" id="subtotalMaterials">0 FCFA</span>
                    </div>
                    <div class="total-row">
                        <span>Droit de raccordement:</span>
                        <span class="price" id="connectionFee">670 000 FCFA</span>
                    </div>
                    <div class="total-row">
                        <span>Main d'≈ìuvre:</span>
                        <span class="price" id="laborCost">200 000 FCFA</span>
                    </div>
                    <div class="total-row">
                        <span>CIE:</span>
                        <span class="price" id="cieFee">150 000 FCFA</span>
                    </div>
                    <div class="total-row">
                        <span>TOTAL G√âN√âRAL:</span>
                        <span class="price" id="grandTotal">0 FCFA</span>
                    </div>
                </div>

                <div class="contact-info">
                    üìû Contact: 0748185512
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initial data based on your handwritten invoice
        const initialItems = [
            { designation: "Support BT 9/650", quantity: 5, unitPrice: 125000 },
            { designation: "Support BT 9/200", quantity: 1, unitPrice: 100000 },
            { designation: "Cable 3x70", quantity: 172, unitPrice: 4000 },
            { designation: "Location Grue", quantity: 1, unitPrice: 250000 },
            { designation: "Pinces ancrage", quantity: 11, unitPrice: 3000 },
            { designation: "Pinces d'alignement", quantity: 4, unitPrice: 2500 },
            { designation: "Raccord", quantity: 8, unitPrice: 1500 },
            { designation: "CO", quantity: 6, unitPrice: 2000 },
            { designation: "Boulons", quantity: 5, unitPrice: 1500 },
            { designation: "Sable, Ciment d'ancrage", quantity: 1, unitPrice: 100000 },
            { designation: "Lampes Compl√®te 150W", quantity: 2, unitPrice: 160000 }
        ];

        let items = [...initialItems];
        const laborCost = 200000; // Main d'≈ìuvre
        const connectionFee = 150000; // CIE fee

        function formatNumber(num) {
            return new Intl.NumberFormat('fr-FR').format(num);
        }

        function generateTable() {
            const tableBody = document.getElementById('tableBody');
            tableBody.innerHTML = '';

            items.forEach((item, index) => {
                const row = document.createElement('tr');
                const total = item.quantity * item.unitPrice;
                
                row.innerHTML = `
                    <td><strong>${item.designation}</strong></td>
                    <td>
                        <input type="number" 
                               class="quantity-input" 
                               value="${item.quantity}" 
                               min="0" 
                               onchange="updateQuantity(${index}, this.value)"
                               onkeyup="updateQuantity(${index}, this.value)">
                    </td>
                    <td class="price">${formatNumber(item.unitPrice)} FCFA</td>
                    <td class="price" id="total-${index}">${formatNumber(total)} FCFA</td>
                `;
                
                tableBody.appendChild(row);
            });

            calculateTotals();
        }

        function updateQuantity(index, newQuantity) {
            const quantity = parseInt(newQuantity) || 0;
            items[index].quantity = quantity;
            
            const total = quantity * items[index].unitPrice;
            document.getElementById(`total-${index}`).textContent = formatNumber(total) + ' FCFA';
            
            calculateTotals();
        }

        function calculateTotals() {
            const subtotalMaterials = items.reduce((sum, item) => sum + (item.quantity * item.unitPrice), 0);
            const connectionRights = 670000; // Droit de raccordement
            const grandTotal = subtotalMaterials + laborCost + connectionRights + connectionFee;

            document.getElementById('subtotalMaterials').textContent = formatNumber(subtotalMaterials) + ' FCFA';
            document.getElementById('grandTotal').textContent = formatNumber(grandTotal) + ' FCFA';
        }

        function generateInvoice() {
            const invoice = document.getElementById('invoice');
            invoice.classList.remove('animation-fade');
            setTimeout(() => {
                invoice.classList.add('animation-fade');
                generateTable();
            }, 100);
        }

        function printInvoice() {
            const printContent = document.getElementById('invoice').outerHTML;
            const originalContent = document.body.innerHTML;
            
            document.body.innerHTML = `
                <style>
                    body { font-family: Arial, sans-serif; margin: 20px; }
                    table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                    th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
                    th { background-color: #f5f5f5; font-weight: bold; }
                    .total-section { margin-top: 30px; }
                    .total-row { display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #ddd; }
                    .price { font-weight: bold; color: #27ae60; }
                    .contact-info { text-align: center; margin-top: 20px; font-weight: bold; }
                    .quantity-input { border: none; background: transparent; text-align: center; font-weight: bold; }
                </style>
                ${printContent}
            `;
            
            window.print();
            document.body.innerHTML = originalContent;
            
            // Reinitialize after printing
            setTimeout(() => {
                generateTable();
            }, 100);
        }

        function resetQuantities() {
            if (confirm('√ätes-vous s√ªr de vouloir r√©initialiser toutes les quantit√©s?')) {
                items = [...initialItems];
                generateTable();
            }
        }

        function setCurrentDate() {
            const today = new Date();
            const options = { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                weekday: 'long'
            };
            document.getElementById('currentDate').textContent = today.toLocaleDateString('fr-FR', options);
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            setCurrentDate();
            generateTable();
        });
    </script>
</body>
</html>
